/*
 * This file is generated by jOOQ.
 */
package jooq.generated.elastic.crawler.aihub;


import javax.annotation.Generated;

import jooq.generated.elastic.crawler.aihub.tables.Article;
import jooq.generated.elastic.crawler.aihub.tables.ArticleCategory;
import jooq.generated.elastic.crawler.aihub.tables.ArticleSolutions;
import jooq.generated.elastic.crawler.aihub.tables.ArticleSourceRef;
import jooq.generated.elastic.crawler.aihub.tables.ArticleTagMap;
import jooq.generated.elastic.crawler.aihub.tables.Author;
import jooq.generated.elastic.crawler.aihub.tables.Contact;
import jooq.generated.elastic.crawler.aihub.tables.Member;
import jooq.generated.elastic.crawler.aihub.tables.Solution;
import jooq.generated.elastic.crawler.aihub.tables.Tag;
import jooq.generated.elastic.crawler.aihub.tables.Vender;
import jooq.generated.elastic.crawler.aihub.tables.VisitCounter;
import jooq.generated.elastic.crawler.aihub.tables.VisitLog;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleCategoryRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleSolutionsRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleSourceRefRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleTagMapRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.AuthorRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.ContactRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.MemberRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.SolutionRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.TagRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.VenderRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.VisitCounterRecord;
import jooq.generated.elastic.crawler.aihub.tables.records.VisitLogRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>aihub</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ArticleRecord, Integer> IDENTITY_ARTICLE = Identities0.IDENTITY_ARTICLE;
    public static final Identity<ArticleCategoryRecord, Integer> IDENTITY_ARTICLE_CATEGORY = Identities0.IDENTITY_ARTICLE_CATEGORY;
    public static final Identity<ArticleSolutionsRecord, Integer> IDENTITY_ARTICLE_SOLUTIONS = Identities0.IDENTITY_ARTICLE_SOLUTIONS;
    public static final Identity<ArticleSourceRefRecord, Integer> IDENTITY_ARTICLE_SOURCE_REF = Identities0.IDENTITY_ARTICLE_SOURCE_REF;
    public static final Identity<ArticleTagMapRecord, Integer> IDENTITY_ARTICLE_TAG_MAP = Identities0.IDENTITY_ARTICLE_TAG_MAP;
    public static final Identity<AuthorRecord, Integer> IDENTITY_AUTHOR = Identities0.IDENTITY_AUTHOR;
    public static final Identity<ContactRecord, Integer> IDENTITY_CONTACT = Identities0.IDENTITY_CONTACT;
    public static final Identity<MemberRecord, Integer> IDENTITY_MEMBER = Identities0.IDENTITY_MEMBER;
    public static final Identity<SolutionRecord, Integer> IDENTITY_SOLUTION = Identities0.IDENTITY_SOLUTION;
    public static final Identity<TagRecord, Integer> IDENTITY_TAG = Identities0.IDENTITY_TAG;
    public static final Identity<VenderRecord, Integer> IDENTITY_VENDER = Identities0.IDENTITY_VENDER;
    public static final Identity<VisitCounterRecord, Integer> IDENTITY_VISIT_COUNTER = Identities0.IDENTITY_VISIT_COUNTER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ArticleRecord> KEY_ARTICLE_PRIMARY = UniqueKeys0.KEY_ARTICLE_PRIMARY;
    public static final UniqueKey<ArticleCategoryRecord> KEY_ARTICLE_CATEGORY_PRIMARY = UniqueKeys0.KEY_ARTICLE_CATEGORY_PRIMARY;
    public static final UniqueKey<ArticleSolutionsRecord> KEY_ARTICLE_SOLUTIONS_PRIMARY = UniqueKeys0.KEY_ARTICLE_SOLUTIONS_PRIMARY;
    public static final UniqueKey<ArticleSourceRefRecord> KEY_ARTICLE_SOURCE_REF_PRIMARY = UniqueKeys0.KEY_ARTICLE_SOURCE_REF_PRIMARY;
    public static final UniqueKey<ArticleTagMapRecord> KEY_ARTICLE_TAG_MAP_PRIMARY = UniqueKeys0.KEY_ARTICLE_TAG_MAP_PRIMARY;
    public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = UniqueKeys0.KEY_AUTHOR_PRIMARY;
    public static final UniqueKey<ContactRecord> KEY_CONTACT_PRIMARY = UniqueKeys0.KEY_CONTACT_PRIMARY;
    public static final UniqueKey<MemberRecord> KEY_MEMBER_PRIMARY = UniqueKeys0.KEY_MEMBER_PRIMARY;
    public static final UniqueKey<MemberRecord> KEY_MEMBER_EMAIL = UniqueKeys0.KEY_MEMBER_EMAIL;
    public static final UniqueKey<SolutionRecord> KEY_SOLUTION_PRIMARY = UniqueKeys0.KEY_SOLUTION_PRIMARY;
    public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = UniqueKeys0.KEY_TAG_PRIMARY;
    public static final UniqueKey<VenderRecord> KEY_VENDER_PRIMARY = UniqueKeys0.KEY_VENDER_PRIMARY;
    public static final UniqueKey<VisitCounterRecord> KEY_VISIT_COUNTER_PRIMARY = UniqueKeys0.KEY_VISIT_COUNTER_PRIMARY;
    public static final UniqueKey<VisitLogRecord> KEY_VISIT_LOG_PRIMARY = UniqueKeys0.KEY_VISIT_LOG_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ArticleRecord, Integer> IDENTITY_ARTICLE = Internal.createIdentity(Article.ARTICLE, Article.ARTICLE.ID);
        public static Identity<ArticleCategoryRecord, Integer> IDENTITY_ARTICLE_CATEGORY = Internal.createIdentity(ArticleCategory.ARTICLE_CATEGORY, ArticleCategory.ARTICLE_CATEGORY.ID);
        public static Identity<ArticleSolutionsRecord, Integer> IDENTITY_ARTICLE_SOLUTIONS = Internal.createIdentity(ArticleSolutions.ARTICLE_SOLUTIONS, ArticleSolutions.ARTICLE_SOLUTIONS.ID);
        public static Identity<ArticleSourceRefRecord, Integer> IDENTITY_ARTICLE_SOURCE_REF = Internal.createIdentity(ArticleSourceRef.ARTICLE_SOURCE_REF, ArticleSourceRef.ARTICLE_SOURCE_REF.ID);
        public static Identity<ArticleTagMapRecord, Integer> IDENTITY_ARTICLE_TAG_MAP = Internal.createIdentity(ArticleTagMap.ARTICLE_TAG_MAP, ArticleTagMap.ARTICLE_TAG_MAP.ID);
        public static Identity<AuthorRecord, Integer> IDENTITY_AUTHOR = Internal.createIdentity(Author.AUTHOR, Author.AUTHOR.ID);
        public static Identity<ContactRecord, Integer> IDENTITY_CONTACT = Internal.createIdentity(Contact.CONTACT, Contact.CONTACT.ID);
        public static Identity<MemberRecord, Integer> IDENTITY_MEMBER = Internal.createIdentity(Member.MEMBER, Member.MEMBER.ID);
        public static Identity<SolutionRecord, Integer> IDENTITY_SOLUTION = Internal.createIdentity(Solution.SOLUTION, Solution.SOLUTION.ID);
        public static Identity<TagRecord, Integer> IDENTITY_TAG = Internal.createIdentity(Tag.TAG, Tag.TAG.ID);
        public static Identity<VenderRecord, Integer> IDENTITY_VENDER = Internal.createIdentity(Vender.VENDER, Vender.VENDER.ID);
        public static Identity<VisitCounterRecord, Integer> IDENTITY_VISIT_COUNTER = Internal.createIdentity(VisitCounter.VISIT_COUNTER, VisitCounter.VISIT_COUNTER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ArticleRecord> KEY_ARTICLE_PRIMARY = Internal.createUniqueKey(Article.ARTICLE, "KEY_article_PRIMARY", Article.ARTICLE.ID);
        public static final UniqueKey<ArticleCategoryRecord> KEY_ARTICLE_CATEGORY_PRIMARY = Internal.createUniqueKey(ArticleCategory.ARTICLE_CATEGORY, "KEY_article_category_PRIMARY", ArticleCategory.ARTICLE_CATEGORY.ID);
        public static final UniqueKey<ArticleSolutionsRecord> KEY_ARTICLE_SOLUTIONS_PRIMARY = Internal.createUniqueKey(ArticleSolutions.ARTICLE_SOLUTIONS, "KEY_article_solutions_PRIMARY", ArticleSolutions.ARTICLE_SOLUTIONS.ID);
        public static final UniqueKey<ArticleSourceRefRecord> KEY_ARTICLE_SOURCE_REF_PRIMARY = Internal.createUniqueKey(ArticleSourceRef.ARTICLE_SOURCE_REF, "KEY_article_source_ref_PRIMARY", ArticleSourceRef.ARTICLE_SOURCE_REF.ID);
        public static final UniqueKey<ArticleTagMapRecord> KEY_ARTICLE_TAG_MAP_PRIMARY = Internal.createUniqueKey(ArticleTagMap.ARTICLE_TAG_MAP, "KEY_article_tag_map_PRIMARY", ArticleTagMap.ARTICLE_TAG_MAP.ID);
        public static final UniqueKey<AuthorRecord> KEY_AUTHOR_PRIMARY = Internal.createUniqueKey(Author.AUTHOR, "KEY_author_PRIMARY", Author.AUTHOR.ID);
        public static final UniqueKey<ContactRecord> KEY_CONTACT_PRIMARY = Internal.createUniqueKey(Contact.CONTACT, "KEY_contact_PRIMARY", Contact.CONTACT.ID);
        public static final UniqueKey<MemberRecord> KEY_MEMBER_PRIMARY = Internal.createUniqueKey(Member.MEMBER, "KEY_member_PRIMARY", Member.MEMBER.ID);
        public static final UniqueKey<MemberRecord> KEY_MEMBER_EMAIL = Internal.createUniqueKey(Member.MEMBER, "KEY_member_email", Member.MEMBER.EMAIL);
        public static final UniqueKey<SolutionRecord> KEY_SOLUTION_PRIMARY = Internal.createUniqueKey(Solution.SOLUTION, "KEY_solution_PRIMARY", Solution.SOLUTION.ID);
        public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = Internal.createUniqueKey(Tag.TAG, "KEY_tag_PRIMARY", Tag.TAG.ID);
        public static final UniqueKey<VenderRecord> KEY_VENDER_PRIMARY = Internal.createUniqueKey(Vender.VENDER, "KEY_vender_PRIMARY", Vender.VENDER.ID);
        public static final UniqueKey<VisitCounterRecord> KEY_VISIT_COUNTER_PRIMARY = Internal.createUniqueKey(VisitCounter.VISIT_COUNTER, "KEY_visit_counter_PRIMARY", VisitCounter.VISIT_COUNTER.ID);
        public static final UniqueKey<VisitLogRecord> KEY_VISIT_LOG_PRIMARY = Internal.createUniqueKey(VisitLog.VISIT_LOG, "KEY_visit_log_PRIMARY", VisitLog.VISIT_LOG.SESSION_ID);
    }
}
