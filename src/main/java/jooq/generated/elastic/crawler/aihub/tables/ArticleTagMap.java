/*
 * This file is generated by jOOQ.
 */
package jooq.generated.elastic.crawler.aihub.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.elastic.crawler.aihub.Aihub;
import jooq.generated.elastic.crawler.aihub.Indexes;
import jooq.generated.elastic.crawler.aihub.Keys;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleTagMapRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleTagMap extends TableImpl<ArticleTagMapRecord> {

    private static final long serialVersionUID = 1272000313;

    /**
     * The reference instance of <code>aihub.article_tag_map</code>
     */
    public static final ArticleTagMap ARTICLE_TAG_MAP = new ArticleTagMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArticleTagMapRecord> getRecordType() {
        return ArticleTagMapRecord.class;
    }

    /**
     * The column <code>aihub.article_tag_map.id</code>.
     */
    public final TableField<ArticleTagMapRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>aihub.article_tag_map.data_id</code>.
     */
    public final TableField<ArticleTagMapRecord, String> DATA_ID = createField("data_id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>aihub.article_tag_map.tag_id</code>.
     */
    public final TableField<ArticleTagMapRecord, Integer> TAG_ID = createField("tag_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>aihub.article_tag_map.created</code>.
     */
    public final TableField<ArticleTagMapRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>aihub.article_tag_map.updated</code>.
     */
    public final TableField<ArticleTagMapRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>aihub.article_tag_map</code> table reference
     */
    public ArticleTagMap() {
        this(DSL.name("article_tag_map"), null);
    }

    /**
     * Create an aliased <code>aihub.article_tag_map</code> table reference
     */
    public ArticleTagMap(String alias) {
        this(DSL.name(alias), ARTICLE_TAG_MAP);
    }

    /**
     * Create an aliased <code>aihub.article_tag_map</code> table reference
     */
    public ArticleTagMap(Name alias) {
        this(alias, ARTICLE_TAG_MAP);
    }

    private ArticleTagMap(Name alias, Table<ArticleTagMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private ArticleTagMap(Name alias, Table<ArticleTagMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ArticleTagMap(Table<O> child, ForeignKey<O, ArticleTagMapRecord> key) {
        super(child, key, ARTICLE_TAG_MAP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aihub.AIHUB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ARTICLE_TAG_MAP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ArticleTagMapRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ARTICLE_TAG_MAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ArticleTagMapRecord> getPrimaryKey() {
        return Keys.KEY_ARTICLE_TAG_MAP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ArticleTagMapRecord>> getKeys() {
        return Arrays.<UniqueKey<ArticleTagMapRecord>>asList(Keys.KEY_ARTICLE_TAG_MAP_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticleTagMap as(String alias) {
        return new ArticleTagMap(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticleTagMap as(Name alias) {
        return new ArticleTagMap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ArticleTagMap rename(String name) {
        return new ArticleTagMap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ArticleTagMap rename(Name name) {
        return new ArticleTagMap(name, null);
    }
}
