/*
 * This file is generated by jOOQ.
 */
package jooq.generated.elastic.crawler.aihub.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.elastic.crawler.aihub.Aihub;
import jooq.generated.elastic.crawler.aihub.Indexes;
import jooq.generated.elastic.crawler.aihub.Keys;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleSourceRefRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 文章資料參考來源
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleSourceRef extends TableImpl<ArticleSourceRefRecord> {

    private static final long serialVersionUID = -1315965035;

    /**
     * The reference instance of <code>aihub.article_source_ref</code>
     */
    public static final ArticleSourceRef ARTICLE_SOURCE_REF = new ArticleSourceRef();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArticleSourceRefRecord> getRecordType() {
        return ArticleSourceRefRecord.class;
    }

    /**
     * The column <code>aihub.article_source_ref.id</code>.
     */
    public final TableField<ArticleSourceRefRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>aihub.article_source_ref.name</code>. 來源名稱
     */
    public final TableField<ArticleSourceRefRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "來源名稱");

    /**
     * The column <code>aihub.article_source_ref.url</code>. 來源url
     */
    public final TableField<ArticleSourceRefRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(50), this, "來源url");

    /**
     * The column <code>aihub.article_source_ref.article_id</code>.
     */
    public final TableField<ArticleSourceRefRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>aihub.article_source_ref</code> table reference
     */
    public ArticleSourceRef() {
        this(DSL.name("article_source_ref"), null);
    }

    /**
     * Create an aliased <code>aihub.article_source_ref</code> table reference
     */
    public ArticleSourceRef(String alias) {
        this(DSL.name(alias), ARTICLE_SOURCE_REF);
    }

    /**
     * Create an aliased <code>aihub.article_source_ref</code> table reference
     */
    public ArticleSourceRef(Name alias) {
        this(alias, ARTICLE_SOURCE_REF);
    }

    private ArticleSourceRef(Name alias, Table<ArticleSourceRefRecord> aliased) {
        this(alias, aliased, null);
    }

    private ArticleSourceRef(Name alias, Table<ArticleSourceRefRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("文章資料參考來源"));
    }

    public <O extends Record> ArticleSourceRef(Table<O> child, ForeignKey<O, ArticleSourceRefRecord> key) {
        super(child, key, ARTICLE_SOURCE_REF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aihub.AIHUB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ARTICLE_SOURCE_REF_ARTICLE_ID, Indexes.ARTICLE_SOURCE_REF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ArticleSourceRefRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ARTICLE_SOURCE_REF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ArticleSourceRefRecord> getPrimaryKey() {
        return Keys.KEY_ARTICLE_SOURCE_REF_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ArticleSourceRefRecord>> getKeys() {
        return Arrays.<UniqueKey<ArticleSourceRefRecord>>asList(Keys.KEY_ARTICLE_SOURCE_REF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticleSourceRef as(String alias) {
        return new ArticleSourceRef(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticleSourceRef as(Name alias) {
        return new ArticleSourceRef(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ArticleSourceRef rename(String name) {
        return new ArticleSourceRef(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ArticleSourceRef rename(Name name) {
        return new ArticleSourceRef(name, null);
    }
}
