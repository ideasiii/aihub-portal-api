/*
 * This file is generated by jOOQ.
 */
package jooq.generated.elastic.crawler.aihub.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.generated.elastic.crawler.aihub.tables.VisitCounter;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitCounterRecord extends UpdatableRecordImpl<VisitCounterRecord> implements Record3<Integer, Integer, Timestamp> {

    private static final long serialVersionUID = 962531372;

    /**
     * Setter for <code>aihub.visit_counter.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>aihub.visit_counter.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>aihub.visit_counter.counter</code>.
     */
    public void setCounter(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>aihub.visit_counter.counter</code>.
     */
    public Integer getCounter() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>aihub.visit_counter.mtime</code>.
     */
    public void setMtime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>aihub.visit_counter.mtime</code>.
     */
    public Timestamp getMtime() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VisitCounter.VISIT_COUNTER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return VisitCounter.VISIT_COUNTER.COUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return VisitCounter.VISIT_COUNTER.MTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getMtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getMtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitCounterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitCounterRecord value2(Integer value) {
        setCounter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitCounterRecord value3(Timestamp value) {
        setMtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitCounterRecord values(Integer value1, Integer value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VisitCounterRecord
     */
    public VisitCounterRecord() {
        super(VisitCounter.VISIT_COUNTER);
    }

    /**
     * Create a detached, initialised VisitCounterRecord
     */
    public VisitCounterRecord(Integer id, Integer counter, Timestamp mtime) {
        super(VisitCounter.VISIT_COUNTER);

        set(0, id);
        set(1, counter);
        set(2, mtime);
    }
}
