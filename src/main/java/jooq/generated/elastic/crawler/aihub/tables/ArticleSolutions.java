/*
 * This file is generated by jOOQ.
 */
package jooq.generated.elastic.crawler.aihub.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.elastic.crawler.aihub.Aihub;
import jooq.generated.elastic.crawler.aihub.Indexes;
import jooq.generated.elastic.crawler.aihub.Keys;
import jooq.generated.elastic.crawler.aihub.tables.records.ArticleSolutionsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleSolutions extends TableImpl<ArticleSolutionsRecord> {

    private static final long serialVersionUID = -1918395258;

    /**
     * The reference instance of <code>aihub.article_solutions</code>
     */
    public static final ArticleSolutions ARTICLE_SOLUTIONS = new ArticleSolutions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArticleSolutionsRecord> getRecordType() {
        return ArticleSolutionsRecord.class;
    }

    /**
     * The column <code>aihub.article_solutions.id</code>.
     */
    public final TableField<ArticleSolutionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>aihub.article_solutions.article_id</code>.
     */
    public final TableField<ArticleSolutionsRecord, String> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>aihub.article_solutions.solution_id</code>.
     */
    public final TableField<ArticleSolutionsRecord, String> SOLUTION_ID = createField("solution_id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * Create a <code>aihub.article_solutions</code> table reference
     */
    public ArticleSolutions() {
        this(DSL.name("article_solutions"), null);
    }

    /**
     * Create an aliased <code>aihub.article_solutions</code> table reference
     */
    public ArticleSolutions(String alias) {
        this(DSL.name(alias), ARTICLE_SOLUTIONS);
    }

    /**
     * Create an aliased <code>aihub.article_solutions</code> table reference
     */
    public ArticleSolutions(Name alias) {
        this(alias, ARTICLE_SOLUTIONS);
    }

    private ArticleSolutions(Name alias, Table<ArticleSolutionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ArticleSolutions(Name alias, Table<ArticleSolutionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ArticleSolutions(Table<O> child, ForeignKey<O, ArticleSolutionsRecord> key) {
        super(child, key, ARTICLE_SOLUTIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aihub.AIHUB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ARTICLE_SOLUTIONS_ARTICLE_ID, Indexes.ARTICLE_SOLUTIONS_PRIMARY, Indexes.ARTICLE_SOLUTIONS_SOLUTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ArticleSolutionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ARTICLE_SOLUTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ArticleSolutionsRecord> getPrimaryKey() {
        return Keys.KEY_ARTICLE_SOLUTIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ArticleSolutionsRecord>> getKeys() {
        return Arrays.<UniqueKey<ArticleSolutionsRecord>>asList(Keys.KEY_ARTICLE_SOLUTIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticleSolutions as(String alias) {
        return new ArticleSolutions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticleSolutions as(Name alias) {
        return new ArticleSolutions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ArticleSolutions rename(String name) {
        return new ArticleSolutions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ArticleSolutions rename(Name name) {
        return new ArticleSolutions(name, null);
    }
}
