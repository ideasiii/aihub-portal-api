/*
 * This file is generated by jOOQ.
 */
package jooq.generated.elastic.crawler.aihub.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.generated.elastic.crawler.aihub.Aihub;
import jooq.generated.elastic.crawler.aihub.Indexes;
import jooq.generated.elastic.crawler.aihub.Keys;
import jooq.generated.elastic.crawler.aihub.enums.VenderIsDelete;
import jooq.generated.elastic.crawler.aihub.tables.records.VenderRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vender extends TableImpl<VenderRecord> {

    private static final long serialVersionUID = -184253509;

    /**
     * The reference instance of <code>aihub.vender</code>
     */
    public static final Vender VENDER = new Vender();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VenderRecord> getRecordType() {
        return VenderRecord.class;
    }

    /**
     * The column <code>aihub.vender.id</code>.
     */
    public final TableField<VenderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>aihub.vender.name</code>. 廠商名稱
     */
    public final TableField<VenderRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "廠商名稱");

    /**
     * The column <code>aihub.vender.vender_id</code>. 統編
     */
    public final TableField<VenderRecord, String> VENDER_ID = createField("vender_id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "統編");

    /**
     * The column <code>aihub.vender.vender_img</code>. 廠商圖像
     */
    public final TableField<VenderRecord, String> VENDER_IMG = createField("vender_img", org.jooq.impl.SQLDataType.VARCHAR(200), this, "廠商圖像");

    /**
     * The column <code>aihub.vender.description</code>. 簡介
     */
    public final TableField<VenderRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "簡介");

    /**
     * The column <code>aihub.vender.phone_number</code>. 聯絡電話
     */
    public final TableField<VenderRecord, String> PHONE_NUMBER = createField("phone_number", org.jooq.impl.SQLDataType.VARCHAR(20), this, "聯絡電話");

    /**
     * The column <code>aihub.vender.address</code>. 住址
     */
    public final TableField<VenderRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.CLOB, this, "住址");

    /**
     * The column <code>aihub.vender.email</code>.
     */
    public final TableField<VenderRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>aihub.vender.created</code>. 建立日期
     */
    public final TableField<VenderRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "建立日期");

    /**
     * The column <code>aihub.vender.updated</code>. 修改時間
     */
    public final TableField<VenderRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改時間");

    /**
     * The column <code>aihub.vender.is_delete</code>.
     */
    public final TableField<VenderRecord, VenderIsDelete> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.field("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(jooq.generated.elastic.crawler.aihub.enums.VenderIsDelete.class), this, "");

    /**
     * Create a <code>aihub.vender</code> table reference
     */
    public Vender() {
        this(DSL.name("vender"), null);
    }

    /**
     * Create an aliased <code>aihub.vender</code> table reference
     */
    public Vender(String alias) {
        this(DSL.name(alias), VENDER);
    }

    /**
     * Create an aliased <code>aihub.vender</code> table reference
     */
    public Vender(Name alias) {
        this(alias, VENDER);
    }

    private Vender(Name alias, Table<VenderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vender(Name alias, Table<VenderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Vender(Table<O> child, ForeignKey<O, VenderRecord> key) {
        super(child, key, VENDER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aihub.AIHUB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VENDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VenderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VenderRecord> getPrimaryKey() {
        return Keys.KEY_VENDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VenderRecord>> getKeys() {
        return Arrays.<UniqueKey<VenderRecord>>asList(Keys.KEY_VENDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vender as(String alias) {
        return new Vender(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vender as(Name alias) {
        return new Vender(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vender rename(String name) {
        return new Vender(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vender rename(Name name) {
        return new Vender(name, null);
    }
}
